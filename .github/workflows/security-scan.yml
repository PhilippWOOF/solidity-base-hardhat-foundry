name: Security Scan

on:
  schedule:
    # Run weekly on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'
  workflow_dispatch:
    # Allow manual triggering
  push:
    branches: [ main ]
    paths:
      - 'contracts/**'
      - 'test/**'

jobs:
  security-scan:
    name: Security Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Install security tools
        run: |
          pip3 install slither-analyzer
          pip3 install mythril
          curl -L https://github.com/crytic/echidna/releases/download/v2.0.4/echidna-test-2.0.4-Ubuntu-18.04.tar.gz | tar -xz
          sudo mv echidna-test /usr/local/bin/

      - name: Compile contracts
        run: pnpm compile

      - name: Run Slither analysis
        run: |
          echo "Running Slither static analysis..."
          slither . --json slither-report.json || true
          slither . --markdown slither-report.md || true

      - name: Run Mythril analysis
        run: |
          echo "Running Mythril analysis..."
          find artifacts/contracts -name "*.json" -exec myth analyze {} \; > mythril-report.txt || true

      - name: Run Echidna fuzzing
        run: |
          echo "Running Echidna fuzzing tests..."
          find contracts -name "*.sol" -exec echo "Testing {}" \; -exec echidna-test {} --contract TestContract --config echidna.config.yml \; > echidna-report.txt || true

      - name: Upload security reports
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: |
            slither-report.json
            slither-report.md
            mythril-report.txt
            echidna-report.txt
          retention-days: 30

      - name: Comment on PR (if applicable)
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let comment = '## ðŸ”’ Security Scan Results\n\n';
            
            try {
              if (fs.existsSync('slither-report.md')) {
                const slitherReport = fs.readFileSync('slither-report.md', 'utf8');
                comment += '### Slither Analysis\n';
                comment += slitherReport.substring(0, 1000) + '\n\n';
              }
              
              if (fs.existsSync('mythril-report.txt')) {
                const mythrilReport = fs.readFileSync('mythril-report.txt', 'utf8');
                comment += '### Mythril Analysis\n';
                comment += '```\n' + mythrilReport.substring(0, 1000) + '\n```\n\n';
              }
              
              if (fs.existsSync('echidna-report.txt')) {
                const echidnaReport = fs.readFileSync('echidna-report.txt', 'utf8');
                comment += '### Echidna Fuzzing\n';
                comment += '```\n' + echidnaReport.substring(0, 1000) + '\n```\n\n';
              }
              
              comment += 'ðŸ“Š Full reports available in workflow artifacts.';
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            } catch (error) {
              console.log('Error creating comment:', error);
            } 